<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deao.dal.dao.auto.AccountInfoModelMapper">
  <resultMap id="BaseResultMap" type="com.deao.dal.daomain.auto.AccountInfoModel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="account_status" jdbcType="VARCHAR" property="accountStatus" />
    <result column="account_status_values" jdbcType="VARCHAR" property="accountStatusValues" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="total_score" jdbcType="INTEGER" property="totalScore" />
    <result column="frozen_score" jdbcType="INTEGER" property="frozenScore" />
    <result column="normal_score" jdbcType="INTEGER" property="normalScore" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="remark_extend" jdbcType="VARCHAR" property="remarkExtend" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account_id, account_status, account_status_values, user_id, total_score, frozen_score, 
    normal_score, remark, remark_extend, create_time, update_time, is_delete
  </sql>
  <select id="selectByExample" parameterType="com.deao.dal.daomain.auto.AccountInfoModelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deao.dal.daomain.auto.AccountInfoModelExample">
    delete from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deao.dal.daomain.auto.AccountInfoModel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account_info (account_id, account_status, account_status_values, 
      user_id, total_score, frozen_score, 
      normal_score, remark, remark_extend, 
      create_time, update_time, is_delete
      )
    values (#{accountId,jdbcType=VARCHAR}, #{accountStatus,jdbcType=VARCHAR}, #{accountStatusValues,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{totalScore,jdbcType=INTEGER}, #{frozenScore,jdbcType=INTEGER}, 
      #{normalScore,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{remarkExtend,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.deao.dal.daomain.auto.AccountInfoModel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        account_id,
      </if>
      <if test="accountStatus != null">
        account_status,
      </if>
      <if test="accountStatusValues != null">
        account_status_values,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="totalScore != null">
        total_score,
      </if>
      <if test="frozenScore != null">
        frozen_score,
      </if>
      <if test="normalScore != null">
        normal_score,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="remarkExtend != null">
        remark_extend,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        #{accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="accountStatusValues != null">
        #{accountStatusValues,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="totalScore != null">
        #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="frozenScore != null">
        #{frozenScore,jdbcType=INTEGER},
      </if>
      <if test="normalScore != null">
        #{normalScore,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="remarkExtend != null">
        #{remarkExtend,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deao.dal.daomain.auto.AccountInfoModelExample" resultType="java.lang.Integer">
    select count(*) from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountStatus != null">
        account_status = #{record.accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.accountStatusValues != null">
        account_status_values = #{record.accountStatusValues,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.totalScore != null">
        total_score = #{record.totalScore,jdbcType=INTEGER},
      </if>
      <if test="record.frozenScore != null">
        frozen_score = #{record.frozenScore,jdbcType=INTEGER},
      </if>
      <if test="record.normalScore != null">
        normal_score = #{record.normalScore,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.remarkExtend != null">
        remark_extend = #{record.remarkExtend,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account_info
    set id = #{record.id,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      account_status = #{record.accountStatus,jdbcType=VARCHAR},
      account_status_values = #{record.accountStatusValues,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      total_score = #{record.totalScore,jdbcType=INTEGER},
      frozen_score = #{record.frozenScore,jdbcType=INTEGER},
      normal_score = #{record.normalScore,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      remark_extend = #{record.remarkExtend,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deao.dal.daomain.auto.AccountInfoModel">
    update account_info
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        account_status = #{accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="accountStatusValues != null">
        account_status_values = #{accountStatusValues,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="totalScore != null">
        total_score = #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="frozenScore != null">
        frozen_score = #{frozenScore,jdbcType=INTEGER},
      </if>
      <if test="normalScore != null">
        normal_score = #{normalScore,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="remarkExtend != null">
        remark_extend = #{remarkExtend,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deao.dal.daomain.auto.AccountInfoModel">
    update account_info
    set account_id = #{accountId,jdbcType=VARCHAR},
      account_status = #{accountStatus,jdbcType=VARCHAR},
      account_status_values = #{accountStatusValues,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      total_score = #{totalScore,jdbcType=INTEGER},
      frozen_score = #{frozenScore,jdbcType=INTEGER},
      normal_score = #{normalScore,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      remark_extend = #{remarkExtend,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.deao.dal.daomain.auto.AccountInfoModel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="account_status" jdbcType="VARCHAR" property="accountStatus" />
    <result column="account_status_values" jdbcType="VARCHAR" property="accountStatusValues" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="total_score" jdbcType="INTEGER" property="totalScore" />
    <result column="frozen_score" jdbcType="INTEGER" property="frozenScore" />
    <result column="normal_score" jdbcType="INTEGER" property="normalScore" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="remark_extend" jdbcType="VARCHAR" property="remarkExtend" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account_id, account_status, account_status_values, user_id, total_score, frozen_score, 
    normal_score, remark, remark_extend, create_time, update_time, is_delete
  </sql>
  <select id="selectByExample" parameterType="com.deao.dal.daomain.auto.AccountInfoModelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deao.dal.daomain.auto.AccountInfoModelExample">
    delete from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deao.dal.daomain.auto.AccountInfoModel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account_info (account_id, account_status, account_status_values, 
      user_id, total_score, frozen_score, 
      normal_score, remark, remark_extend, 
      create_time, update_time, is_delete
      )
    values (#{accountId,jdbcType=VARCHAR}, #{accountStatus,jdbcType=VARCHAR}, #{accountStatusValues,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{totalScore,jdbcType=INTEGER}, #{frozenScore,jdbcType=INTEGER}, 
      #{normalScore,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{remarkExtend,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.deao.dal.daomain.auto.AccountInfoModel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        account_id,
      </if>
      <if test="accountStatus != null">
        account_status,
      </if>
      <if test="accountStatusValues != null">
        account_status_values,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="totalScore != null">
        total_score,
      </if>
      <if test="frozenScore != null">
        frozen_score,
      </if>
      <if test="normalScore != null">
        normal_score,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="remarkExtend != null">
        remark_extend,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        #{accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="accountStatusValues != null">
        #{accountStatusValues,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="totalScore != null">
        #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="frozenScore != null">
        #{frozenScore,jdbcType=INTEGER},
      </if>
      <if test="normalScore != null">
        #{normalScore,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="remarkExtend != null">
        #{remarkExtend,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deao.dal.daomain.auto.AccountInfoModelExample" resultType="java.lang.Integer">
    select count(*) from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountStatus != null">
        account_status = #{record.accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.accountStatusValues != null">
        account_status_values = #{record.accountStatusValues,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.totalScore != null">
        total_score = #{record.totalScore,jdbcType=INTEGER},
      </if>
      <if test="record.frozenScore != null">
        frozen_score = #{record.frozenScore,jdbcType=INTEGER},
      </if>
      <if test="record.normalScore != null">
        normal_score = #{record.normalScore,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.remarkExtend != null">
        remark_extend = #{record.remarkExtend,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account_info
    set id = #{record.id,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      account_status = #{record.accountStatus,jdbcType=VARCHAR},
      account_status_values = #{record.accountStatusValues,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      total_score = #{record.totalScore,jdbcType=INTEGER},
      frozen_score = #{record.frozenScore,jdbcType=INTEGER},
      normal_score = #{record.normalScore,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      remark_extend = #{record.remarkExtend,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deao.dal.daomain.auto.AccountInfoModel">
    update account_info
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        account_status = #{accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="accountStatusValues != null">
        account_status_values = #{accountStatusValues,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="totalScore != null">
        total_score = #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="frozenScore != null">
        frozen_score = #{frozenScore,jdbcType=INTEGER},
      </if>
      <if test="normalScore != null">
        normal_score = #{normalScore,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="remarkExtend != null">
        remark_extend = #{remarkExtend,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deao.dal.daomain.auto.AccountInfoModel">
    update account_info
    set account_id = #{accountId,jdbcType=VARCHAR},
      account_status = #{accountStatus,jdbcType=VARCHAR},
      account_status_values = #{accountStatusValues,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      total_score = #{totalScore,jdbcType=INTEGER},
      frozen_score = #{frozenScore,jdbcType=INTEGER},
      normal_score = #{normalScore,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      remark_extend = #{remarkExtend,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.deao.dal.daomain.auto.AccountInfoModel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="account_status" jdbcType="VARCHAR" property="accountStatus" />
    <result column="account_status_values" jdbcType="VARCHAR" property="accountStatusValues" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="total_score" jdbcType="INTEGER" property="totalScore" />
    <result column="frozen_score" jdbcType="INTEGER" property="frozenScore" />
    <result column="normal_score" jdbcType="INTEGER" property="normalScore" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="remark_extend" jdbcType="VARCHAR" property="remarkExtend" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account_id, account_status, account_status_values, user_id, total_score, frozen_score, 
    normal_score, remark, remark_extend, create_time, update_time, is_delete
  </sql>
  <select id="selectByExample" parameterType="com.deao.dal.daomain.auto.AccountInfoModelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deao.dal.daomain.auto.AccountInfoModelExample">
    delete from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deao.dal.daomain.auto.AccountInfoModel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account_info (account_id, account_status, account_status_values, 
      user_id, total_score, frozen_score, 
      normal_score, remark, remark_extend, 
      create_time, update_time, is_delete
      )
    values (#{accountId,jdbcType=VARCHAR}, #{accountStatus,jdbcType=VARCHAR}, #{accountStatusValues,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{totalScore,jdbcType=INTEGER}, #{frozenScore,jdbcType=INTEGER}, 
      #{normalScore,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{remarkExtend,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.deao.dal.daomain.auto.AccountInfoModel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        account_id,
      </if>
      <if test="accountStatus != null">
        account_status,
      </if>
      <if test="accountStatusValues != null">
        account_status_values,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="totalScore != null">
        total_score,
      </if>
      <if test="frozenScore != null">
        frozen_score,
      </if>
      <if test="normalScore != null">
        normal_score,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="remarkExtend != null">
        remark_extend,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        #{accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="accountStatusValues != null">
        #{accountStatusValues,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="totalScore != null">
        #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="frozenScore != null">
        #{frozenScore,jdbcType=INTEGER},
      </if>
      <if test="normalScore != null">
        #{normalScore,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="remarkExtend != null">
        #{remarkExtend,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deao.dal.daomain.auto.AccountInfoModelExample" resultType="java.lang.Integer">
    select count(*) from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountStatus != null">
        account_status = #{record.accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.accountStatusValues != null">
        account_status_values = #{record.accountStatusValues,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.totalScore != null">
        total_score = #{record.totalScore,jdbcType=INTEGER},
      </if>
      <if test="record.frozenScore != null">
        frozen_score = #{record.frozenScore,jdbcType=INTEGER},
      </if>
      <if test="record.normalScore != null">
        normal_score = #{record.normalScore,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.remarkExtend != null">
        remark_extend = #{record.remarkExtend,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account_info
    set id = #{record.id,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      account_status = #{record.accountStatus,jdbcType=VARCHAR},
      account_status_values = #{record.accountStatusValues,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      total_score = #{record.totalScore,jdbcType=INTEGER},
      frozen_score = #{record.frozenScore,jdbcType=INTEGER},
      normal_score = #{record.normalScore,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      remark_extend = #{record.remarkExtend,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deao.dal.daomain.auto.AccountInfoModel">
    update account_info
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        account_status = #{accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="accountStatusValues != null">
        account_status_values = #{accountStatusValues,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="totalScore != null">
        total_score = #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="frozenScore != null">
        frozen_score = #{frozenScore,jdbcType=INTEGER},
      </if>
      <if test="normalScore != null">
        normal_score = #{normalScore,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="remarkExtend != null">
        remark_extend = #{remarkExtend,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deao.dal.daomain.auto.AccountInfoModel">
    update account_info
    set account_id = #{accountId,jdbcType=VARCHAR},
      account_status = #{accountStatus,jdbcType=VARCHAR},
      account_status_values = #{accountStatusValues,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      total_score = #{totalScore,jdbcType=INTEGER},
      frozen_score = #{frozenScore,jdbcType=INTEGER},
      normal_score = #{normalScore,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      remark_extend = #{remarkExtend,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>